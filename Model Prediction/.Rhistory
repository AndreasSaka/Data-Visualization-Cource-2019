#loading the library "readxl" to be able to use the function read_xlsx().
library(readxl)
#loading the library "formattable" to introduce a table with all the variables.
library(formattable)
#loading the library "ggplot2" to create usefull plots.
library(ggplot2)
#loading the library "GGally" to create usefull plots.
library(GGally)
#loading the library "tidyverse" to perform varius manipulations.
library(tidyverse)
#loading the library "car" to perform VIF.
library(car)
#loading the library "leaps" to perform subset selection.
p.student <-
read.csv("C:\\Users\\Andreas\\Desktop\\Assignment B\\StudentsPerformance.csv",
header = TRUE)
names(p.student)
head(p.student)
tail(p.student)
sapply(p.student, function(x) sum(length(which(is.na(x)))))
sapply(p.student,class)
summary(p.student)
plot(p.student$math.score~.,data=p.student)
plot(p.student$reading.score~.,data=p.student)
plot(p.student$writing.score~.,data=p.student)
ggplot(p.student)+
geom_histogram(mapping = aes(x = p.student$math.score))+
geom_vline(xintercept=mean(p.student$math.score), lwd=1, linetype=2, color="black")+
ggtitle("Math Score Distribution")
ggplot(p.student)+
geom_histogram(mapping = aes(x = p.student$reading.score))+
geom_vline(xintercept=mean(p.student$reading.score), lwd=1, linetype=2, color="black")+
ggtitle("Reading Score Distribution")
ggplot(p.student)+
geom_histogram(mapping = aes(x = p.student$writing.score))+
geom_vline(xintercept=mean(p.student$writing.score), lwd=1, linetype=2, color="black")+
ggtitle("Writing Score Distribution")
p.student %>%
ggplot(aes(x = test.preparation.course , y = math.score, fill = p.student$gender)) +
geom_boxplot() +
theme_minimal()+
ggtitle("Math Score BoxPlot")
p.student %>%
ggplot(aes(x = parental.level.of.education , y = reading.score, fill = p.student$gender)) +
geom_boxplot() +
theme_minimal()+
ggtitle("Reading Score BoxPlot")
p.student %>%
ggplot(aes(x = race.ethnicity , y = writing.score, fill = p.student$gender)) +
geom_boxplot() +
theme_minimal()+
ggtitle("Writing Score BoxPlot")
#Splitting the dataset into a training(75%) and testing set(25%).
#Create a variable "split" that contains 750 times the word train and 250 the
#word test.
split <- c(rep("train", 750), rep("test",  250))
#Divide the dataset based on the words train and test.
p.student <- p.student %>% mutate(split = sample(split))
#Delete the column split
p.student_train <- p.student %>% filter(split == "train")
p.student_train$split <-  NULL
#Delete the column split
p.student_test <- p.student %>% filter(split == "test")
p.student_test$split <-  NULL
#The multiple regression model is selected since the input variable is quantitative.
model1 <- lm(formula=p.student_train$math.score ~ . , data=p.student_train)
#Aquire the summary statistics of the multiple linear regression.
summary(model1)
summary(model1)$coefficient
vif(model1)
reduced <-
lm(formula=p.student_train$math.score ~gender+lunch+test.preparation.course+reading.score+writing.score ,
data=p.student_train)
summary(reduced)
y_pred <- predict(model1,newdata = p.student_train)
tibble(pred = y_pred,
obs  = p.student_train$math.score) %>%
ggplot(aes(x = pred, y = obs)) +
geom_point() +
theme_minimal() +
geom_abline(slope = 1)+
labs(title = "Predicted versus observed Math Score")
plot(model1, pch=16, which=1)
ggplot(data=p.student_train, aes(model1$residuals)) +
geom_histogram(binwidth = 1, color = "black", fill = "purple4")+
theme(panel.background = element_rect(fill = "white"),
axis.line.x=element_line(),
axis.line.y=element_line()) +
ggtitle("Histogram for TrainSet Model_1 Residuals")
model2 <- lm(formula=math.score ~ . , data=p.student_test)
summary(model2)
y_pred2 <- predict(model2,newdata = p.student_test)
tibble(pred = y_pred2,
obs  = p.student_test$math.score) %>%
ggplot(aes(x = pred, y = obs)) +
geom_point() +
theme_minimal() +
geom_abline(slope = 1)+
labs(title = "Predicted versus observed Math Score")
#95% confidence interval
prediction1 <- predict(model2, p.student_test, interval="confidence", level = 0.95)
plot(model2, pch=16, which=1)
ggplot(data=p.student_test, aes(model2$residuals)) +
geom_histogram(binwidth = 1, color = "black", fill = "purple4")+
theme(panel.background = element_rect(fill = "white"),
axis.line.x=element_line(),
axis.line.y=element_line()) +
ggtitle("Histogram for TestSet Model_2 Residuals")
#loading the library "readxl" to be able to use the function read_xlsx().
library(readxl)
#loading the library "formattable" to introduce a table with all the variables.
library(formattable)
#loading the library "ggplot2" to create usefull plots.
library(ggplot2)
#loading the library "GGally" to create usefull plots.
library(GGally)
#loading the library "tidyverse" to perform varius manipulations.
library(tidyverse)
#loading the library "car" to perform VIF.
library(car)
#loading the library "leaps" to perform subset selection.
p.student <-
read.csv("C:\\Users\\Andreas\\Desktop\\Assignment B\\StudentsPerformance.csv",
header = TRUE)
names(p.student)
head(p.student)
tail(p.student)
sapply(p.student, function(x) sum(length(which(is.na(x)))))
sapply(p.student,class)
summary(p.student)
plot(p.student$math.score~.,data=p.student)
plot(p.student$reading.score~.,data=p.student)
plot(p.student$writing.score~.,data=p.student)
ggplot(p.student)+
geom_histogram(mapping = aes(x = p.student$math.score))+
geom_vline(xintercept=mean(p.student$math.score), lwd=1, linetype=2, color="black")+
ggtitle("Math Score Distribution")
ggplot(p.student)+
geom_histogram(mapping = aes(x = p.student$reading.score))+
geom_vline(xintercept=mean(p.student$reading.score), lwd=1, linetype=2, color="black")+
ggtitle("Reading Score Distribution")
ggplot(p.student)+
geom_histogram(mapping = aes(x = p.student$writing.score))+
geom_vline(xintercept=mean(p.student$writing.score), lwd=1, linetype=2, color="black")+
ggtitle("Writing Score Distribution")
p.student %>%
ggplot(aes(x = test.preparation.course , y = math.score, fill = p.student$gender)) +
geom_boxplot() +
theme_minimal()+
ggtitle("Math Score BoxPlot")
p.student %>%
ggplot(aes(x = parental.level.of.education , y = reading.score, fill = p.student$gender)) +
geom_boxplot() +
theme_minimal()+
ggtitle("Reading Score BoxPlot")
p.student %>%
ggplot(aes(x = race.ethnicity , y = writing.score, fill = p.student$gender)) +
geom_boxplot() +
theme_minimal()+
ggtitle("Writing Score BoxPlot")
#Splitting the dataset into a training(75%) and testing set(25%).
#Create a variable "split" that contains 750 times the word train and 250 the
#word test.
split <- c(rep("train", 750), rep("test",  250))
#Divide the dataset based on the words train and test.
p.student <- p.student %>% mutate(split = sample(split))
#Delete the column split
p.student_train <- p.student %>% filter(split == "train")
p.student_train$split <-  NULL
#Delete the column split
p.student_test <- p.student %>% filter(split == "test")
p.student_test$split <-  NULL
#The multiple regression model is selected since the input variable is quantitative.
model1 <- lm(formula=p.student_train$math.score ~ . , data=p.student_train)
#Aquire the summary statistics of the multiple linear regression.
summary(model1)
summary(model1)$coefficient
vif(model1)
reduced <-
lm(formula=p.student_train$math.score ~gender+lunch+test.preparation.course+reading.score+writing.score ,
data=p.student_train)
summary(reduced)
y_pred <- predict(model1,newdata = p.student_train)
tibble(pred = y_pred,
obs  = p.student_train$math.score) %>%
ggplot(aes(x = pred, y = obs)) +
geom_point() +
theme_minimal() +
geom_abline(slope = 1)+
labs(title = "Predicted versus observed Math Score")
plot(model1, pch=16, which=1)
ggplot(data=p.student_train, aes(model1$residuals)) +
geom_histogram(binwidth = 1, color = "black", fill = "purple4")+
theme(panel.background = element_rect(fill = "white"),
axis.line.x=element_line(),
axis.line.y=element_line()) +
ggtitle("Histogram for TrainSet Model_1 Residuals")
model2 <- lm(formula=math.score ~ . , data=p.student_test)
summary(model2)
y_pred2 <- predict(model2,newdata = p.student_test)
tibble(pred = y_pred2,
obs  = p.student_test$math.score) %>%
ggplot(aes(x = pred, y = obs)) +
geom_point() +
theme_minimal() +
geom_abline(slope = 1)+
labs(title = "Predicted versus observed Math Score")
#95% confidence interval
prediction1 <- predict(model2, p.student_test, interval="confidence", level = 0.95)
plot(model2, pch=16, which=1)
ggplot(data=p.student_test, aes(model2$residuals)) +
geom_histogram(binwidth = 1, color = "black", fill = "purple4")+
theme(panel.background = element_rect(fill = "white"),
axis.line.x=element_line(),
axis.line.y=element_line()) +
ggtitle("Histogram for TestSet Model_2 Residuals")
